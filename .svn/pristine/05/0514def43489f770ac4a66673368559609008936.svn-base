<?php
/**
 * Created by PhpStorm.
 * User: liluoao
 * Date: 2016/4/15
 * Time: 12:10
 */

namespace app\controllers;

use app\models\product;
use yii\helpers\Json;
use app\common\Common;
use app\models\Dictitem;
use yii\data\Pagination;
use yii;
use yii\web\Controller;

class ProductController extends Controller
{
    public $layout = false; //设置使用的布局文件
    public $enableCsrfValidation = false;

    public function actionIndex()
    {
        return $this->render('index');
    }

    public function actionList(){
        return $this->render('list');
    }

    /*
     * 产品显示
     */
    public function actionListall()
    {
        $productTitle = Yii::$app->request->get('productTitle');
        $productType = Yii::$app->request->get('productType');
        $productState = Yii::$app->request->get('productState');
        $para=array();
        $id=Product::findOne('id');
        $para['productTitle'] = $productTitle;
        $para['productType'] = $productType;
        $para['productState'] = $productState;
        $whereStr = '1=1';
        if($productTitle  != ''){
            $whereStr = $whereStr." and productTitle like '%".$productTitle ."%'";
        }
        if($productType != ''){
            $whereStr = $whereStr." and productType like '%".$productType."%'";
        }
        if($productState != ''){
            $whereStr = $whereStr." and productState=".$productState;
        }
        $users = Product::find()->where($whereStr);
        $pages = new Pagination(['totalCount' =>$users->count(), 'pageSize' => Common::PAGESIZE]);
        $models = $users->offset($pages->offset)->limit($pages->limit)->all();
        $dictItem = Dictitem::find()
            ->where(['dictCode' => 'DICT_PRODUCTSTATE'])
            ->all();
        $dictItemS = Dictitem::find()
            ->where(['dictCode' => 'DICT_PRODUCTUNIT'])
            ->all();
        $dictItemSS = Dictitem::find()
            ->where(['dictCode' => 'DICT_PRODUCTTYPE'])
            ->all();
        $dictItemSSS = Dictitem::find()
            ->where(['dictCode' => 'DICT_ISINDEX'])
            ->all();
        foreach($models as $key=>$data) {
            foreach ($dictItem as $index => $value) {
                if ($data->productState == $value->dictItemCode) {
                    $models[$key]->productState = $value->dictItemName;
                }
            }
            foreach($dictItemS as $index=>$value){
                if($data->productUnit == $value->dictItemCode){
                    $models[$key]->productUnit = $value->dictItemName;
                }
            }
            foreach($dictItemSS as $index=>$value){
                if($data->productType == $value->dictItemCode){
                    $models[$key]->productType = $value->dictItemName;
                }
            }
            foreach($dictItemSSS as $index=>$value){
                if($data->isIndex == $value->dictItemCode){
                    $models[$key]->isIndex = $value->dictItemName;
                }
            }
        }
        return $this->render('listall',[
            'users' => $models,
            'pages' => $pages,
            'para' => $para
        ]);
    }

    /*
     * 产品添加
     */
    public function actionAdd()
    {
        return $this->render('add');
    }

    //检查商品名是否重复
    public function actionCheckusername()
    {
        $productTitle = Yii::$app->request->get('productTitle');
        $user = Product::find()->where(['productTitle' => $productTitle])->all();
        if(sizeof($user) == 0){
            return "success";
        }else{
            return "exist";
        }
    }


    /*
     *  添加商品
     */
    public function actionInsert(){
        $user = new Product();
        $user->id = Common::generateID();
        $user->productTitle = Yii::$app->request->post('productTitle');
        $user->productPrice = Yii::$app->request->post('productPrice');
        $user->productDiscri = Yii::$app->request->post('productDiscri');
        $user->productDiscount = Yii::$app->request->post('productDiscount');
        $user->productUnit = Yii::$app->request->post('productUnit');
        $user->picUrl = Yii::$app->request->post('picUrl');
        $user->thumbnailUrl = Yii::$app->request->post('thumbnailUrl');
        $user->inventory = Yii::$app->request->post('inventory');
        $user->productState = '1';
        $user->productType = Yii::$app->request->post('productType');
        $user->productSize = Yii::$app->request->post('productSize');
        $user->isIndex = Yii::$app->request->post('isIndex');
        if($user->save()){
            return "success";
        }else{
            return "fail";
        }
    }

    //删除单个商品
    public function actionDelete()
    {
        $id = Yii::$app->request->post("id");
        $user = Product::findOne($id);
        if($user->delete()){
            return "success";
        }else{
            return "fail";
        }
    }

    /*
     *  删除多个商品
     */
    public function actionDeleteall()
    {
        $ids = Yii::$app->request->post("ids");
        $ids_array = explode('-',$ids);
        foreach($ids_array as $key => $data){
           Product::deleteAll('id = :id',[':id'=>$data]);
        }
        return 'success';
    }

    /*
     * 修改
     */
    public function actionEdit()
    {
        $id = Yii::$app->request->get('id');
        $product =Product::findOne($id);
        $productUnit = Dictitem::find()->where(['dictCode' => 'DICT_PRODUCTUNIT'])->all();
        $productStatedict = Dictitem::find()->where(['dictCode' => 'DICT_PRODUCTSTATE'])->all();
        $productTypedict = Dictitem::find()->where(['dictCode' => 'DICT_PRODUCTTYPE'])->all();
        $isIndexdict = Dictitem::find()->where(['dictCode' => 'DICT_ISINDEX'])->all();
        return $this->render('edit',[
            'product' => $product,
            'productUnitdict' => $productUnit,
            'isIndexdict' => $isIndexdict,
            'productStatedict' => $productStatedict,
            'productTypedict'=>$productTypedict,
        ]);
    }

    /*
     * 更新
     */
    public function actionUpdate()
    {
        $id = Yii::$app->request->post('id');
        $user =Product::findOne($id);
        $user->productTitle = Yii::$app->request->post('productTitle');
        $user->productPrice = Yii::$app->request->post('productPrice');
        $user->productDiscri = Yii::$app->request->post('productDiscri');
        $user->productDiscount = Yii::$app->request->post('productDiscount');
        $user->picUrl = Yii::$app->request->post('picUrl');
        $user->thumbnailUrl = Yii::$app->request->post('thumbnailUrl');
        $user->inventory = Yii::$app->request->post('inventory');
        $user->productUnit = Yii::$app->request->post('productUnit');
        $user->productState = Yii::$app->request->post('productState');
        $user->productType = Yii::$app->request->post('productType');
        $user->productSize = Yii::$app->request->post('productSize');
        $user->isIndex = Yii::$app->request->post('isIndex');

        if ($user->save()){
            return 'success';
        }else{
            return 'fail';
        }
    }

    /*
     * 详情页
     */
    public function actionDetail()
    {
        $id = Yii::$app->request->get('id');
        $user = Product::findOne($id);
        //字典反转
        $dictItem = Dictitem::find()
            ->where(['dictCode' => 'DICT_PRODUCTUNIT'])
            ->all();
        $dictItemS = Dictitem::find()
            ->where(['dictCode' => 'DICT_PRODUCTSTATE'])
            ->all();
       $dictItemSS = Dictitem::find()
            ->where(['dictCode' => 'DICT_PRODUCTTYPE'])
            ->all();
        $dictItemSSS = Dictitem::find()
            ->where(['dictCode' => 'DICT_ISINDEX'])
            ->all();
        foreach ($dictItem as $index => $value) {
            if ($user->productUnit == $value->dictItemCode) {
                $user->productUnit = $value->dictItemName;
            }
        }
        foreach($dictItemS as $index=>$value){
            if($user->productState == $value->dictItemCode){
                $user->productState = $value->dictItemName;
            }
        }
        foreach($dictItemSS as $index=>$value){
            if($user->productType == $value->dictItemCode){
                $user->productType = $value->dictItemName;
            }
        }
        foreach($dictItemSSS as $index=>$value){
            if($user->isIndex == $value->dictItemCode){
                $user->isIndex = $value->dictItemName;
            }
        }
        return $this->render('detail',[
            'user'=>$user,
        ]);
    }

    /*
     * 上传
     */
    public function actionUpload(){
        //实现上传
        if (Yii::$app->request->isPost) {
            $isThumb = Yii::$app->request->get('isThumb');
            $views = 'upload';
            if(is_null($isThumb)){
                $fileArg = Common::upload($_FILES,true,false);
            }else{
                $fileArg = Common::upload($_FILES,true,true);
                $views = 'uploads';
            }

            return $this->render($views,[
                "fileArg" => $fileArg,
                "tag" => $fileArg['tag'],
            ]);
        }
        $detail = Yii::$app->request->get('detail');
        if(is_null($detail)){
            return $this->render('upload',[
                "tag" => "empty",
                "fileArg" =>[
                    "fileSaveUrl" =>"",//上传文件保存的路径
                    "tag" => "",//当为success表示上传成功，当为error时表示文件过大或是文件类型不对
                ],
            ]);
        }else{
            return $this->render('uploads',[
                "tag" => "empty",
                "fileArg" =>[
                    "fileSaveUrl" =>"",//上传文件保存的路径
                    "tag" => "",//当为success表示上传成功，当为error时表示文件过大或是文件类型不对
                ],
            ]);
        }
    }

    public function actionUploadss(){
        //实现上传
        if (Yii::$app->request->isPost) {
            $isThumb = Yii::$app->request->get('isThumb');
            $views = 'upload';
            if(is_null($isThumb)){
                $fileArg = Common::upload($_FILES,true,false);
            }else{
                $fileArg = Common::upload($_FILES,true,true);
                $views = 'uploads';
            }

            return $this->render($views,[
                "fileArg" => $fileArg,
                "tag" => $fileArg['tag'],
            ]);
        }
        $detail = Yii::$app->request->get('detail');
        if(is_null($detail)){
            return $this->render('upload',[
                "tag" => "empty",
                "fileArg" =>[
                    "fileSaveUrl" =>"",//上传文件保存的路径
                    "tag" => "",//当为success表示上传成功，当为error时表示文件过大或是文件类型不对
                ],
            ]);
        }else{
            return $this->render('uploads',[
                "tag" => "empty",
                "fileArg" =>[
                    "fileSaveUrl" =>"",//上传文件保存的路径
                    "tag" => "",//当为success表示上传成功，当为error时表示文件过大或是文件类型不对
                ],
            ]);
        }


    }

    /*
     * 上架
     */
    public function actionProductlist()
    {
        $ids = Yii::$app->request->post("ids");
        $ids_array = explode('-',$ids);
        foreach($ids_array as $key => $data){
            $user=Product::findOne($data);
            $user->productState="0";
            $user->save();
        }
        return 'success';
    }

    /*
     * 下架
     */
    public function actionProductdownlist()
    {
        $ids = Yii::$app->request->post("ids");
        $ids_array = explode('-',$ids);
        foreach($ids_array as $key => $data){
            $user=Product::findOne($data);
            $user->productState="1";
            $user->save();
        }
        return 'success';
    }

}
