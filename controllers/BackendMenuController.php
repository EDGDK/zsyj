<?php

namespace app\controllers;

use app\models\BackendMenu;
use yii\helpers\Json;
use Yii;
use app\common\Common;
class BackendMenuController extends \yii\web\Controller
{
    public $layout = false;
    public $enableCsrfValidation = false;
    public $backendMenus;
    public $backendMenu;
    public $backendMenuOne;
    public $level;

    /*
    * @function 权限验证
    * @date 2016-4-17
    */
    public function beforeAction($action)
    {
        if(is_null(yii::$app->session['username']) || yii::$app->session['userType'] != '2')
        {
            $this->redirect(['login/index']);

            return false;
        }else{
            return parent::beforeAction($action); // TODO: Change the autogenerated stub

        }
    }

    public function actionIndex()
    {
        return $this->render('index');
    }

    /*
     * @author ly
     * @function 获取菜单列表页
     */
    public function actionList(){
        return $this->render('list');
    }

    public function actionTree(){
        $this->backendMenus = BackendMenu::find()
            ->where("state = '1' ")
            ->orderBy('orderBy')
            ->all();

        return $this->render("tree");
    }

    public function actionEdit($menuId){
        $menuId = Yii::$app->request->get('menuId');
        $this->backendMenuOne = BackendMenu::findOne($menuId);
        return $this->render("edit");
    }

    /*
     * 查找一个菜单
     */
    public function actionFindone(){
        $menuLevel = Yii::$app->request->get('menuLevel');
        if($menuLevel == '1'){
            $this->backendMenu = null;
            $this->level = '1';
        }else{
            $menuId = Yii::$app->request->get('uplevelMenu');
            $this->backendMenu = BackendMenu::findOne($menuId);
            $this->level = $this->backendMenu->menuLevel+1;
        }
        return $this->render("add");

    }

    public function actionSaveone(){
        $bkMenu = new  BackendMenu();
        $bkMenu->menuLevel = Yii::$app->request->post('menuLevel');
        if($bkMenu->menuLevel != '1'){
            $bkMenu->uplevelMenu = Yii::$app->request->post("uplevelMenu");
        }
        $bkMenu->id = Common::generateID();
        $bkMenu->menuName = Yii::$app->request->post('menuName');
        $bkMenu->menuUrl = Yii::$app->request->post('menuUrl');
        $bkMenu->state = '1';
        $bkMenu->orderBy = Yii::$app->request->post('orderBy');

        if($bkMenu->save())
        {
            return "success";
        }else{
            return "fail";
        }
    }

    public function actionUpdate(){
        $bkMenu = new  BackendMenu();
        $bkMenu = BackendMenu::findOne(Yii::$app->request->post('id'));
        $bkMenu->menuName = Yii::$app->request->post('menuName');
        $bkMenu->menuUrl = Yii::$app->request->post('menuUrl');
        $bkMenu->state = Yii::$app->request->post('state');
        $bkMenu->orderBy = Yii::$app->request->post('orderBy');

        if($bkMenu->save())
        {
            return "success";
        }else{
            return "fail";
        }


    }
    /*
     * 根据id删除一个菜单
     */
    public function actionDeleteone(){
        $menuId = YII::$app->request->post('menuId');
        $backendMenuOne = BackendMenu::findOne($menuId);
        if($backendMenuOne->menuLevel == "1"){
            $this->backendMenus =  BackendMenu::find()
                ->where('uplevelMenu = :id',[':id'=>$backendMenuOne->id])
                ->all();
            foreach($this->backendMenus as $key=>$value){
                BackendMenu::deleteAll('uplevelMenu = :id',[':id'=>$value->id]);
            }
            BackendMenu::deleteAll('uplevelMenu = :id',[':id'=>$backendMenuOne->id]);
        }elseif($backendMenuOne->menuLevel == "2") {
            BackendMenu::deleteAll('uplevelMenu = :id', [':id' => $backendMenuOne->id]);
        }
        if(BackendMenu::findOne($menuId)->delete()){
            return "success";
        }else{
            return "fail";
        }

    }

}
