<?php

namespace app\controllers;

use app\models\User;
use Yii;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\filters\VerbFilter;
use app\models\BackendMenu;
use yii\helpers\Json;
use app\common\Common;
use app\models\Dictitem;
use yii\data\Pagination;
class UserController extends Controller
{
    public $layout = false; //设置使用的布局文件
    public $menuModels;
    public $menuId;
    public $menus;
    public $enableCsrfValidation = false;
    /*获取主页相关数据

    */
    public function actionIndex()
    {
        $this->menuModels = BackendMenu::find()
            ->where(['state' => '1','menuLevel'=>'1'])
            ->orderBy('orderBy')
            ->all();
        return $this->render('index');

    }

    /*
     * 获取菜单
     */
    public function actionMenu(){

        if(Yii::$app->request->isAjax){//是否ajax请求
            $this->menuId = Yii::$app->request->post('id');
            $this->menus = BackendMenu::find()
                ->where("menuLevel>'1'")
                ->where("state='1'")
                ->orderBy('orderBy')
                ->all();
            return Json::encode($this->menus);//Yii 的方法将数组处理成json数据
        }
    }

     public function actionMain(){
         return $this->renderPartial("main");
     }
    public function actionLeft_menu(){
        return $this->renderPartial("left_menu");
    }

    /*
     * @author liuyao
     * @date 2016-3-20
     * @function 跳转到用户列表
     */
    public function actionList(){
        return $this->render('list');
    }

    /*
     * @author liuyao
     * @date 2016-3-20
     * @function 跳转到增加用户页面
     */
    public function actionAdd(){
        return $this->render('add');
    }

    /*
     * @author liuyao
     * @date 2016-3-20
     * @function 检查用户名是否重复
     */
    public function actionCheckusername(){
        $username = Yii::$app->request->get('username');
        $user = User::find()->where(['username' => $username])->all();
        if(sizeof($user) == 0){
            return "success";
        }else{
            return "exist";
        }
    }


    /*
     * @author liuyao
     * @date 2016-3-20
     * @function 添加一个用户
     */
    public function actionInsert(){
        $user = new User();
        $user->id = Common::generateID();
        $user->username = Yii::$app->request->post('username');
        $user->truename = Yii::$app->request->post('truename');
        $user->password = Common::hashMD5(Yii::$app->request->post('password'));
        $user->mobilephone = Yii::$app->request->post('mobilephone');
        $user->sex = Yii::$app->request->post('sex');
        $user->userState = '1';
        $user->userType = '2';//一般采购用户-0；企业采购用户-1；后台界面-2
        if($user->save()){
            return "success";
        }else{
            return "fail";
        }
    }

    /*
     * @author liuyao
     * @date 2016-3-20
     * @function 获取用户列表
     */
    public function actionListall(){
        $username = Yii::$app->request->get('username');
        $truename = Yii::$app->request->get('truename');
        $departmentId = Yii::$app->request->get('departmentId');
        $state = Yii::$app->request->get('state');
        $para=array();
        $para['username'] = $username;
        $para['truename'] = $truename;
        $para['departmentId'] = $departmentId;
        $para['state'] = $state;
        $whereStr = '1=1';
        if($username != ''){
            $whereStr = $whereStr." and username like '%".$username."%'";
        }
        if($truename != ''){
            $whereStr = $whereStr." and truename like '%".$truename."%'";
        }
        if($departmentId != '' && $departmentId != 'null'){
            $whereStr = $whereStr." and departmentId like '%".$departmentId."%'";
        }
        if($state != ''){
            $whereStr = $whereStr." and userState=".$state;
        }
        $users = User::find()->where($whereStr);
        $pages = new Pagination(['totalCount' =>$users->count(), 'pageSize' => Common::PAGESIZE]);
        $models = $users->offset($pages->offset)->limit($pages->limit)->all();
        $dictItem = Dictitem::find()
            ->where(['dictCode' => 'DICT_STATE'])
            ->all();
        $dictItemS = Dictitem::find()
            ->where(['dictCode' => 'DICT_SEX'])
            ->all();
        foreach($models as $key=>$data) {
            foreach ($dictItem as $index => $value) {
                if ($data->userState == $value->dictItemCode) {
                    $models[$key]->userState = $value->dictItemName;
                }
            }
            foreach($dictItemS as $index=>$value){
                if($data->sex == $value->dictItemCode){
                    $models[$key]->sex = $value->dictItemName;
                }
            }
        }
        return $this->render('listall',[
            'users' => $models,
            'pages' => $pages,
            'para' => $para,
        ]);


    }


    /*
     * @author xufangkai
     * @date 2016-3-20
     * @function 获取详情页
     */
    public function actionDetail()
    {
        $id = Yii::$app->request->get('id');
        $user = User::findOne($id);

        /*
         * 字典反转
         */
        $dictItem = Dictitem::find()
            ->where(['dictCode' => 'DICT_STATE'])
            ->all();
        $dictItemS = Dictitem::find()
            ->where(['dictCode' => 'DICT_SEX'])
            ->all();

        foreach ($dictItem as $index => $value) {
            if ($user->userState == $value->dictItemCode) {
                $user->userState = $value->dictItemName;
            }
        }
        foreach($dictItemS as $index=>$value){
            if($user->sex == $value->dictItemCode){
                $user->sex = $value->dictItemName;
            }
        }


        return $this->render('detail',[
            'user'=>$user,
        ]);
    }
    public function actionEdit(){
        $id = Yii::$app->request->get('id');
        $user = User::findOne($id);
        $sexdict = Dictitem::find()->where(['dictCode' => 'DICT_SEX'])->all();
        $statedict = Dictitem::find()->where(['dictCode' => 'DICT_STATE'])->all();
        return $this->render('edit',[
            'user' => $user,
            'sexdict' => $sexdict,
            'statedict' => $statedict,
        ]);
    }
    public function actionUpdate(){
        $id = Yii::$app->request->post('id');
        $user = User::findOne($id);
        $user->truename = Yii::$app->request->post('truename');
        $user->mobilephone = Yii::$app->request->post('mobilephone');
        $user->sex = Yii::$app->request->post('sex');
        $user->userState = Yii::$app->request->post('userState');
        if ($user->save()){
            return 'success';
        }else{
            return 'fail';
        }
    }
    /*
     * 作者：刘翘
     * 时间：2016/3/21
     * 功能：重置密码
     *
     */
    public function actionReset(){
        $id = Yii::$app->request->post('id');
        $user = User::findOne($id);
        $user->password = Common::hashMD5(Common::PASSWORD);
        if($user->save()){
            return "success";
        }else{
            return "fail";
        }
    }

    /*
     * @author liluoao
     * @date 2016-3-21
     * @function 删除一个用户
     */
    public function actionDelete(){
        $id = Yii::$app->request->post("id");
        $user = User::findOne($id);
        if($user->delete()){
            return "success";
        }else{
            return "fail";
        }
    }

    /*
     * @author liluoao
     * @date 2016-3-21
     * @function 删除多个用户
     */
    public function actionDeleteall(){
        $ids = Yii::$app->request->post("ids");
        $ids_array = explode('-',$ids);
        foreach($ids_array as $key => $data){
            User::deleteAll('id = :id',[':id'=>$data]);
        }
        return 'success';
    }

    /*
     * @author liluoao
     * @date 2016-3-25
     * @function 实现修改密码
     */
    public function actionChangepwd(){
        $oldPWD = Yii::$app->request->post('oldPWD');
        $newPWD = Yii::$app->request->post('newPWD');
        $user = User::find()
            ->where(('id = :id and password = :password'),
                [
                    ':id' => Yii::$app->session['userId'],
                    ':password' => Common::hashMD5($oldPWD)
                ])
            ->one();
        if(is_null($user)){
            return "fail";
        }else{
            $user->password = Common::hashMD5($newPWD);
            $user->save();
            return "success";
        }
    }
}
