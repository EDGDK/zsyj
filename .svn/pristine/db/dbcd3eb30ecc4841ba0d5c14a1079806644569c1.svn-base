<?php
/**
 * Created by PhpStorm.
 * User: liluoao
 * Date: 2016/3/21
 */
namespace app\controllers;

use Yii;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\helpers\Json;
use app\common\Common;
use yii\data\Pagination;
use app\models\Article;
use app\models\Dictitem;

class ArticleController extends Controller
{
	public $layout = false;
	public $enableCsrfValidation = false;

	/*
    * @function 权限验证
    * @date 2016-4-17
    */
	public function beforeAction($action)
	{
		if(is_null(yii::$app->session['username']) || yii::$app->session['userType'] != '2')
		{
			$this->redirect(['login/index']);

			return false;
		}else{
			return parent::beforeAction($action); // TODO: Change the autogenerated stub

		}
	}


	public function actionList()
	{
		return $this->render('list');
	}

	/*
	 * 跳转到添加文章页面
	 */
	public function actionAdd(){
		return $this->render('add');
	}

	/*
	 * 文章列表页
	 */
	public function actionListall()
	{
		$title = Yii::$app->request->get('title');
		$author = Yii::$app->request->get('author');
		$articleType = Yii::$app->request->get('articleType');
		$date1 = Yii::$app->request->get('_senderDateTime');
		$data2 = Yii::$app->request->get('senderDateTime_');
		$para = array();
		$para['title'] = $title;
		$para['author'] = $author;
		$para['articleType'] = $articleType;
		$para['date1'] = $date1;
		$para['data2'] = $data2;
		$whereStr = '1=1';//查询条件
		if ($title != '') {
			$whereStr = $whereStr . " and title like '%" . $title . "%'";
		}
		if ($author != '') {
			$whereStr = $whereStr . " and author like '%" . $author . "%'";
		}
		if ($articleType != '') {
			$whereStr = $whereStr . " and articleType like '%" . $articleType . "%'";
		}
		if ($date1 != '') {
			$whereStr = $whereStr . " and publish_date >= '" . $date1 . "%'";
		}
		if ($data2 != '') {
			$whereStr = $whereStr . " and publish_date <= '" . $data2 . "%'";
		}

		$articles = Article::find()->where($whereStr);
		$pages = new Pagination(['totalCount' => $articles->count(), 'pageSize' => Common::PAGESIZE]);//分页
		$models = $articles->offset($pages->offset)->limit($pages->limit)->orderBy('publish_date DESC,isTop ASC')->all();
		//字典反转
		$dictItem = Dictitem::find()
			->where(['dictCode' => 'DICT_ARTICLE_TYPE'])
			->all();
		$dictItems = Dictitem::find()
			->where(['dictCode' => 'DICT_IS_TOP'])
			->all();
		$dictItemss = Dictitem::find()
			->where(['dictCode' => 'DICT_STATE'])
			->all();
		foreach ($models as $key => $data) {
			foreach ($dictItem as $index => $value) {
				if ($data->articleType == $value->dictItemCode) {
					$models[$key]->articleType = $value->dictItemName;
				}
			}
			foreach ($dictItems as $index => $value) {
				if ($data->isTop == $value->dictItemCode) {
					$models[$key]->isTop = $value->dictItemName;
				}
			}
			foreach ($dictItemss as $index => $value) {
				if ($data->articleState == $value->dictItemCode) {
					$models[$key]->articleState = $value->dictItemName;
				}
			}
		}//结束
		return $this->render('listall', [
			'articles' => $models,
			'pages' => $pages,
			'para' => $para,
		]);
	}

	/*
	 * 保存
	 */
	public function actionSave(){
		$article = new Article();
		$article->id = Common::generateID();//默认方法生成ID
		$article->title = Yii::$app->request->post('title');
		$article->articleType = Yii::$app->request->post('articleType');
		$article->author = Yii::$app->request->post('author');
		$article->source = Yii::$app->request->post('source');
		$article->content = Yii::$app->request->post('content');
		$article->publish_date = Yii::$app->request->post('senderDateTime');
		$article->attachUrls = Yii::$app->request->post('attachUrls');
		$article->attachNames = Yii::$app->request->post('attachNames');
		$article->isTop = Yii::$app->request->post('isTop');
		$article->articleState = '1';//默认状态为可用
		if($article->save()){
			return 'success';
		}else{
			return 'fail';
		};
	}

	/*
	 * 详情
	 */
	public function actionDetail()
	{
		$id = Yii::$app->request->get('id');
		$article = Article::findOne($id);
		//字典反转
		$dictItem = Dictitem::find()
			->where(['dictCode' => 'DICT_ARTICLE_TYPE'])
			->all();
		$dictItems = Dictitem::find()
			->where(['dictCode' => 'DICT_IS_TOP'])
			->all();
		$dictItemss = Dictitem::find()
			->where(['dictCode' => 'DICT_STATE'])
			->all();
		foreach ($dictItem as $index => $value) {
			if ($article->articleType == $value->dictItemCode) {
				$article->articleType = $value->dictItemName;
			}
		}
		foreach ($dictItems as $index => $value) {
			if ($article->isTop == $value->dictItemCode) {
				$article->isTop = $value->dictItemName;
			}
		}
		foreach ($dictItemss as $index => $value) {
			if ($article->articleState == $value->dictItemCode) {
				$article->articleState = $value->dictItemName;
			}
		}//结束
		return $this->render('detail',[
			'article' => $article,
		]);
	}

	/*
	 * 修改
	 */
	public function actionEdit(){
		$id = Yii::$app->request->get('id');
		$article = Article::findOne($id);
		$title = Yii::$app->request->get('title');
		$author = Yii::$app->request->get('author');
		$articleType = Yii::$app->request->get('articleType');
		//发送三个字典项到视图里供选
		$statedict = Dictitem::find()->where(['dictCode' => 'DICT_STATE'])->all();
		$typedict = Dictitem::find()->where(['dictCode' => 'DICT_ARTICLE_TYPE'])->all();
		$topdict = Dictitem::find()->where(['dictCode' => 'DICT_IS_TOP'])->all();
		return $this->render('edit',[
			'article' => $article,
			'statedict' => $statedict,
			'typedict' => $typedict,
			'topdict' => $topdict,
		]);
	}

	/*
	 * 更新
	 */
	public function actionUpdate(){
		$id = Yii::$app->request->post('id');
		$article = Article::findOne($id);
		$article->title = Yii::$app->request->post('title');
		$article->articleType = Yii::$app->request->post('articleType');
		$article->author = Yii::$app->request->post('author');
		$article->source = Yii::$app->request->post('source');
		$article->content = Yii::$app->request->post('content');
		$article->publish_date = Yii::$app->request->post('senderDateTime');
		$article->attachUrls = Yii::$app->request->post('attachUrls');
		$article->attachNames = Yii::$app->request->post('attachNames');
		$article->isTop = Yii::$app->request->post('isTop');
		$article->clicks = Yii::$app->request->post('clicks');
		$article->articleState = Yii::$app->request->post('articleState');
		if ($article->save()){
			return 'success';
		}else{
			return 'fail';
		}
	}

	/*
	 * 删除单篇文章
	 */
	public function actionDelete(){
		$id = Yii::$app->request->post("id");
		$article = Article::findOne($id);
		if($article->delete())
		{
			return "success";
		}else{
			return "fail";
		}
	}

	/*
	 * 删除多篇文章
	 */
	public function actionDeleteall()
	{
		$ids = Yii::$app->request->post("ids");
		$ids_array = explode('-',$ids);
		foreach($ids_array as $key => $data){
			Article::deleteAll('id = :id',[':id'=>$data]);
		}
		return 'success';
	}

	/*
	 * 跳转到上传页面
	 */
	public function actionUpload(){
		//实现上传

		if (Yii::$app->request->isPost) {

			$fileArg = Common::upload($_FILES,false,false);
			return $this->render('upload',[
				"fileArg" => $fileArg,
				"tag" => $fileArg['tag'],
			]);
		}
		return $this->render('upload',[
			"tag" => "empty",
			"fileArg" =>[
				"fileName" => "",     //保存到数据库的文件名称
				"fileSaveUrl" =>"",//上传文件保存的路径
				"tag" => "",//当为success表示上传成功，当为error时表示文件过大或是文件类型不对
			],
		]);

	}

}
