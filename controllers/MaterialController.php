<?php

namespace app\controllers;

use app\models\Material;
use Yii;
use app\models\Dictitem;
use yii\data\Pagination;
use app\common\Common;
class MaterialController extends \yii\web\Controller
{
    public $layout = false;
    public $enableCsrfValidation = false;

    /*
    * @function 权限验证
    * @date 2016-4-17
    */
    public function beforeAction($action)
    {
        if(is_null(yii::$app->session['username']) || yii::$app->session['userType'] != '2')
        {
            $this->redirect(['login/index']);

            return false;
        }else{
            return parent::beforeAction($action); // TODO: Change the autogenerated stub

        }
    }

    public function actionIndex()
    {
        return $this->render('index');
    }

    /*
     * @author xfk
     * @date 2016-3-21
     * @function 跳转到添加原材料列表
    */
    public function actionList(){
        return $this->render('list');
    }

    /*
     * @author xfk
     * @date 2016-3-21
     * @function 跳转到增加原材料页面
     */
    public function actionAdd(){
        return $this->render('add');
    }

    /*
     * @author xfk
     * @date 2016-3-23
     * @function 跳转到选择原材料页面
     */
    public function actionChoose(){
        $dictItem = Dictitem::find()
            ->where(['dictCode' => 'DICT_MATERIALNAME'])
            ->all();
        foreach ($dictItem as $index => $value)
            return $this->render('choose',[
                'dictItem' => $dictItem,

            ]);
    }

    /*
     * @author xfk
     * @date 2016-3-23
     * @function 获取原材料列表
     */
    public function actionListall(){
        $materialname = Yii::$app->request->get('materialname');
        $materialprice = Yii::$app->request->get('materialprice');
        $materialdiscri = Yii::$app->request->get('materialdiscri');
        $materialunit = Yii::$app->request->get('materialunit');
        $materialnum = Yii::$app->request->get('materialnum');
        $materialtype = Yii::$app->request->get('materialtype');
        $purchasedatetime_1 = Yii::$app->request->get('purchasedatetime_1');
        $purchasedatetime_2 = Yii::$app->request->get('purchasedatetime_2');
        $para=array();
        $para['materialname'] = $materialname;
        $para['materialprice'] = $materialprice;
        $para['materialdiscri'] = $materialdiscri;
        $para['materialunit'] = $materialunit;
        $para['materialnum'] = $materialnum;
        $para['materialtype'] = $materialtype;
        $para['purchasedatetime_1'] = $purchasedatetime_1;
        $para['purchasedatetime_2'] = $purchasedatetime_2;
        $whereStr = '1=1';
        if($materialname != ''){
            $whereStr = $whereStr." and materialname like '%".$materialname."%'";
        }
        if($materialprice != ''){
            $whereStr = $whereStr." and materialprice like '%".$materialprice."%'";
        }
        if($materialdiscri != ''){
            $whereStr = $whereStr." and materialdiscri like '%".$materialdiscri."%'";
        }
        if($materialunit != ''){
            $whereStr = $whereStr." and materialunit like '%".$materialunit."%'";
        }
        if($materialnum != ''){
            $whereStr = $whereStr." and materialnum like '%".$materialnum."%'";
        }
        if($materialtype != ''){
            $whereStr = $whereStr." and materialtype=".$materialtype;
        }
        if($purchasedatetime_1 != ''){
            $whereStr = $whereStr." and purchasedatetime >= '".$purchasedatetime_1."%'";
        }
        if($purchasedatetime_2 != ''){
            $whereStr = $whereStr." and purchasedatetime <= '".$purchasedatetime_2."%'";
        }
        $materials = Material::find()->where($whereStr);
        $pages = new Pagination(['totalCount' =>$materials->count(), 'pageSize' => Common::PAGESIZE]);
        //->orderBy('orderdateTime DESC')时间按降序排列
        $models = $materials->offset($pages->offset)->orderBy('purchasedatetime DESC')->limit($pages->limit)->all();
        $dictItem = Dictitem::find()
            ->where(['dictCode' => 'DICT_MATERIALNAME'])
            ->all();
        $dictItemS = Dictitem::find()
            ->where(['dictCode' => 'DICT_MATERIALUNIT'])
            ->all();
        $dictItemSs = Dictitem::find()
            ->where(['dictCode' => 'DICT_MATERIALTYPE'])
            ->all();
        foreach($models as $key=>$data) {
            foreach ($dictItem as $index => $value) {
                if ($data->materialname == $value->dictItemCode) {
                    $models[$key]->materialname = $value->dictItemName;
                }
            }
            foreach($dictItemS as $index=>$value){
                if($data->materialunit == $value->dictItemCode){
                    $models[$key]->materialunit = $value->dictItemName;
                }
            }
            foreach($dictItemSs as $index=>$value){
                if($data->materialtype == $value->dictItemCode){
                    $models[$key]->materialtype = $value->dictItemName;
                }
            }
        }
        return $this->render('listall',[
            'materials' => $models,
            'pages' => $pages,
            'para' => $para,
            'materialname' => $materialname,
            'materialprice' => $materialprice,
            'materialunit' => $materialunit,
            'materialnum' => $materialnum,
            'materialtype' => $materialtype,
            'purchasedatetime_1' => $purchasedatetime_1,
            'purchasedatetime_2' => $purchasedatetime_2,
        ]);
    }
    /*
     * @author xfk
     * @date 2016-3-23
     * @function 添加原材料
     */
    public function actionInsert(){
        $material = new Material();
        $material->id = Common::generateID();
        $material->materialname = Yii::$app->request->post('materialname');
        $material->materialprice = Yii::$app->request->post('materialprice');
        $material->materialdiscri = Yii::$app->request->post('materialdiscri');
        $material->materialunit = Yii::$app->request->post('materialunit');
        $material->materialnum = Yii::$app->request->post('materialnum');
        $material->materialtype = Yii::$app->request->post('materialtype');
        $material->purchasedatetime = Yii::$app->request->post('purchasedatetime');
        if($material->save()){
            return "success";
        }else{
            return "fail";
        }
    }

    /*
     * @author xfk
     * @date 2016-3-22
     * @function 获取详情页
     */
    public function actionDetail()
    {
        $id = Yii::$app->request->get('id');
        $material = Material::findOne($id);

        /*
         * 字典反转
         */
        $dictItem = Dictitem::find()
            ->where(['dictCode' => 'DICT_MATERIALNAME'])
            ->all();
        $dictItemS = Dictitem::find()
            ->where(['dictCode' => 'DICT_MATERIALUNIT'])
            ->all();
        $dictItemSs = Dictitem::find()
            ->where(['dictCode' => 'DICT_MATERIALTYPE'])
            ->all();

        foreach ($dictItem as $index => $value) {
            if ($material->materialname == $value->dictItemCode) {
                $material->materialname = $value->dictItemName;
            }
        }
        foreach($dictItemS as $index=>$value){
            if($material->materialunit == $value->dictItemCode){
                $material->materialunit = $value->dictItemName;
            }
        }
        foreach($dictItemSs as $index=>$value){
            if($material->materialtype == $value->dictItemCode){
                $material->materialtype = $value->dictItemName;
            }
        }


        return $this->render('detail',[
            'material'=>$material,
        ]);
    }

    /*
     * @author xfk
     * @date 2016-3-24
     * @function 打开修改页面
     */
    public function actionEdit(){
        $id = Yii::$app->request->get('id');
        $material = Material::findOne($id);
        $materialname = Dictitem::find()->where(['dictCode' => 'DICT_MATERIALNAME'])->all();
        $materialunit = Dictitem::find()->where(['dictCode' => 'DICT_MATERIALUNIT'])->all();
        $materialtype = Dictitem::find()->where(['dictCode' => 'DICT_MATERIALTYPE'])->all();
        return $this->render('edit',[
            'material' => $material,
            'materialname' => $materialname,
            'materialunit' => $materialunit,
            'materialtype' => $materialtype,
        ]);
    }

    /*
    * @author xfk
    * @date 2016-3-24
    * @function 修改
    */
    public function actionUpdate(){
        $id = Yii::$app->request->post('id');
        $material = Material::findOne($id);
        $material->materialname = Yii::$app->request->post('materialname');
        $material->materialprice = Yii::$app->request->post('materialprice');
        $material->materialdiscri = Yii::$app->request->post('materialdiscri');
        $material->materialunit = Yii::$app->request->post('materialunit');
        $material->materialnum = Yii::$app->request->post('materialnum');
        $material->materialtype = Yii::$app->request->post('materialtype');
        $material->purchasedatetime = Yii::$app->request->post('purchasedatetime');
        if ($material->save()){
            return 'success';
        }else{
            return 'fail';
        }
    }

    /*
     * @author xfk
     * @date 2016-3-22
     * @function 删除一个原材料
     */
    public function actionDelete(){
        $id = Yii::$app->request->post("id");
        $material = Material::findOne($id);
        if($material->delete()){
            return "success";
        }else{
            return "fail";
        }
    }

    /*
     * @author xfk
     * @date 2016-3-22
     * @function 删除多个原材料
     */
    public function actionDeleteall(){
        $ids = Yii::$app->request->post("ids");
        $ids_array = explode('-',$ids);
        foreach($ids_array as $key => $data){
            Material::deleteAll('id = :id',[':id'=>$data]);
        }
        return 'success';
    }

    /*
     * @author xfk
     * @date 2016-3-29
     * @function 添加材料名称
     */
    public function actionNameadd(){
        if(Yii::$app->request->isGet){
            $dictItemName = Yii::$app->request->get("dictItemName");
            $itemCount = Dictitem::find()->where(('dictCode = :dictCode and dictItemName = :dictItemName'),
                [':dictCode'=>'DICT_MATERIALNAME',':dictItemName'=>$dictItemName])->count();
            if($itemCount == 0){
                return 'success';
            }else{
                return 'exist';
            }
        }else{
            $dictItemName = Yii::$app->request->post("dictItemName");
            $itemCount = Dictitem::find()->where(('dictCode = :dictCode and dictItemName = :dictItemName'),
                [':dictCode'=>'DICT_MATERIALNAME',':dictItemName'=>$dictItemName])->count();
            if($itemCount == 0){
                $dictItem = Dictitem::find()
                    ->where(('dictCode = :dictCode'),[':dictCode'=>'DICT_MATERIALNAME'])
                    ->orderBy('dictItemCode DESC')
                    ->one();
                $dictItemNew = new Dictitem();
                $dictItemNew->id = Common::generateID();
                $dictItemNew->dictCode = 'DICT_MATERIALNAME';
                $dictItemNew->state = '1';
                $dictItemNew->dictItemCode = strval(intval($dictItem->dictItemCode) + 1);
                $dictItemNew->dictItemName = $dictItemName;
                $dictItemNew->orderBy = 2;
                if($dictItemNew->save()){
                    return 'success';
                }else{
                    return 'fail';
                }
            }else{
                return 'exist';
            }
        }
    }
    /*
     * @author xfk
     * @date 2016-3-29
     * @function 添加材料单位
     */
    public function actionUnitadd(){
        if(Yii::$app->request->isGet){
            $dictItemName = Yii::$app->request->get("dictItemName1");
            $itemCount = Dictitem::find()->where((""),
                [':dictCode'=>'DICT_MATERIALUNIT',':dictItemName'=>$dictItemName])->count();
            if($itemCount == 0){
                return 'success';
            }else{
                return 'exist';
            }
        }else{
            $dictItemName = Yii::$app->request->post("dictItemName");
            $itemCount = Dictitem::find()->where(('dictCode = :dictCode and dictItemName = :dictItemName'),
                [':dictCode'=>'DICT_MATERIALUNIT',':dictItemName'=>$dictItemName])->count();
            if($itemCount == 0){
                $dictItem = Dictitem::find()
                    ->where(('dictCode = :dictCode'),[':dictCode'=>'DICT_MATERIALUNIT'])
                    ->orderBy('dictItemCode DESC')
                    ->one();
                $dictItemNew = new Dictitem();
                $dictItemNew->id = Common::generateID();
                $dictItemNew->dictCode = 'DICT_MATERIALUNIT';
                $dictItemNew->state = '1';
                $dictItemNew->dictItemCode = strval(intval($dictItem->dictItemCode) + 1);
                $dictItemNew->dictItemName = $dictItemName;
                $dictItemNew->orderBy = 2;
                if($dictItemNew->save()){
                    return 'success';
                }else{
                    return 'fail';
                }
            }else{
                return 'exist';
            }
        }
    }
    /*
     * @author xfk
     * @date 2016-3-29
     * @function 添加材料类型
     */
    public function actionTypeadd(){
        if(Yii::$app->request->isGet){
            $dictItemName = Yii::$app->request->get("dictItemName2");
            $itemCount = Dictitem::find()->where((""),
                [':dictCode'=>'DICT_MATERIALTYPE',':dictItemName'=>$dictItemName])->count();
            if($itemCount == 0){
                return 'success';
            }else{
                return 'exist';
            }
        }else{
            $dictItemName = Yii::$app->request->post("dictItemName");
            $itemCount = Dictitem::find()->where(('dictCode = :dictCode and dictItemName = :dictItemName'),
                [':dictCode'=>'DICT_MATERIALTYPE',':dictItemName'=>$dictItemName])->count();
            if($itemCount == 0){
                $dictItem = Dictitem::find()
                    ->where(('dictCode = :dictCode'),[':dictCode'=>'DICT_MATERIALTYPE'])
                    ->orderBy('dictItemCode DESC')
                    ->one();
                $dictItemNew = new Dictitem();
                $dictItemNew->id = Common::generateID();
                $dictItemNew->dictCode = 'DICT_MATERIALTYPE';
                $dictItemNew->state = '1';
                $dictItemNew->dictItemCode = strval(intval($dictItem->dictItemCode) + 1);
                $dictItemNew->dictItemName = $dictItemName;
                $dictItemNew->orderBy = 2;
                if($dictItemNew->save()){
                    return 'success';
                }else{
                    return 'fail';
                }
            }else{
                return 'exist';
            }
        }
    }

}
